# This is a basic workflow to help you get started with Actions

name: Pulumi

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "update"
  build:
    name: Install and Build .NET
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      #set up .net for code
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
          include-prerelease: true
      
      # set up .net for Pulumi
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
          
      - name: Install dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --no-restore --configuration Release

      - name: Build Solution
        run: dotnet publish --no-restore --configuration Release --output ./publish pulumi-cs-demo.csproj
        
      - name: Upload Application Artifact
        uses: actions/upload-artifact@v2
        with:
          name: importfunction
          path: ./publish
          retention-days: 0
        
  deploy:
    name: deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
          include-prerelease: true
      
      - name: Get Pulumi cli
        uses: pulumi/action-install-pulumi-cli@v1
        with:
          pulumi-version: 3.30.0
          
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_PRINCIPAL }}
      
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: importfunction
          path: ./publish
          
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: dev
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ fromJSON(secrets.AZURE_PRINCIPAL).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJSON(secrets.AZURE_PRINCIPAL).clientSecret }}
          ARM_TENANT_ID: ${{ fromJSON(secrets.AZURE_PRINCIPAL).tenantId }}
          ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_PRINCIPAL).subscriptionId }}
          AZURE_KEYVAULT_AUTH_VIA_CLI: true
